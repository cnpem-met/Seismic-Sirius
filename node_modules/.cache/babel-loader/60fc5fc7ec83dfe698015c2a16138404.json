{"ast":null,"code":"var _jsxFileName = \"/home/reftek/seismic-sirius/src/modules/seismicpreview/fourierpreview.js\";\nimport React, { Component } from 'react';\nimport './seismicpreview.css';\nimport CanvasJSReact from './canvasjs/canvasjs.react';\nimport $ from 'jquery';\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nexport default class FouerierPreview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      channel: []\n    };\n  }\n\n  componentDidMount() {\n    this.setPreview();\n  }\n\n  setPreview() {\n    fetch(`http://10.0.38.242/api/fourierpreview.php?channel=${this.props.channel}`).then(response => response.json()).then(responseJson => {\n      setTimeout(() => {\n        this.setState({\n          channel: responseJson.fourier\n        });\n      }, 1500);\n    });\n  }\n\n  render() {\n    var data = [];\n    var dataPoints = [];\n    var dataSeries = {\n      type: \"line\",\n      lineColor: \"rgb(1, 176, 117)\"\n    };\n    var type = this.props.type;\n    this.state.channel.forEach(e => {\n      dataPoints.push({\n        x: parseFloat(e[0]),\n        y: parseFloat(e[1])\n      });\n    });\n    dataSeries.dataPoints = dataPoints;\n    data.push(dataSeries);\n    const options = {\n      backgroundColor: \"transparent\",\n      height: $(window).height() * this.props.height,\n      zoomEnabled: true,\n      axisY: {\n        title: \"MAGNITUDE (10e+6)\",\n        titleFontSize: $(window).height() * 0.016,\n        titleFontColor: \"#FFFFFF\",\n        includeZero: true,\n        labelFontColor: \"white\",\n        labelFontSize: $(window).height() * 0.016,\n        labelFormatter: function (e) {\n          if (type === \"preview\") return \"\";\n          return e.value / 10 ** 6;\n        }\n      },\n      axisX: {\n        title: \"FREQUENCY (Hz)\",\n        titleFontSize: $(window).height() * 0.016,\n        titleFontColor: \"#FFFFFF\",\n        includeZero: false,\n        labelFontColor: \"white\",\n        labelFontSize: $(window).height() * 0.016\n      },\n      data: data\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, \" \", this.props.title, \" \"), /*#__PURE__*/React.createElement(CanvasJSChart, {\n      options: options,\n      onRef: ref => this.chart = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/reftek/seismic-sirius/src/modules/seismicpreview/fourierpreview.js"],"names":["React","Component","CanvasJSReact","$","CanvasJSChart","FouerierPreview","constructor","props","state","channel","componentDidMount","setPreview","fetch","then","response","json","responseJson","setTimeout","setState","fourier","render","data","dataPoints","dataSeries","type","lineColor","forEach","e","push","x","parseFloat","y","options","backgroundColor","height","window","zoomEnabled","axisY","title","titleFontSize","titleFontColor","includeZero","labelFontColor","labelFontSize","labelFormatter","value","axisX","ref","chart"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './seismicpreview.css';\nimport CanvasJSReact from './canvasjs/canvasjs.react';\nimport $ from 'jquery';\n\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nexport default class FouerierPreview extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {channel: []};\n    }\n\n    componentDidMount(){\n        this.setPreview();\n    }\n\n    setPreview(){\n        fetch(`http://10.0.38.242/api/fourierpreview.php?channel=${this.props.channel}`)\n            .then((response) => response.json())\n            .then((responseJson) => {\n                setTimeout(() => {\n                    this.setState({channel: responseJson.fourier});\n                }, 1500);\n            });\n    }\n\n    render(){\n\n        var data = [];\n        var dataPoints = [];\n        var dataSeries = {type: \"line\", lineColor: \"rgb(1, 176, 117)\"};\n        var type = this.props.type;\n\n        this.state.channel.forEach(e => {\n            dataPoints.push({x: parseFloat(e[0]), y: parseFloat(e[1])})\n        })\n        \n        dataSeries.dataPoints = dataPoints;\n        data.push(dataSeries);\n\n        const options = {\n            backgroundColor: \"transparent\",\n            height: $(window).height() * this.props.height,\n            zoomEnabled: true,\n            axisY: {\n                title: \"MAGNITUDE (10e+6)\",\n                titleFontSize: $(window).height() * 0.016,\n                titleFontColor: \"#FFFFFF\",\n                includeZero: true, \n                labelFontColor: \"white\", \n                labelFontSize:  $(window).height() * 0.016, \n                labelFormatter: function(e){\n                    if(type === \"preview\")\n                        return \"\";\n                    return e.value / 10**6;\n                },\n            },\n\t\t\taxisX: {\n                title: \"FREQUENCY (Hz)\",\n                titleFontSize: $(window).height() * 0.016,\n                titleFontColor: \"#FFFFFF\",\n                includeZero: false, \n                labelFontColor: \"white\", \n                labelFontSize:  $(window).height() * 0.016,\n            },\n            data: data\n        }\n        \n        return(\n            <div>\n                <div className=\"spacing\"> {this.props.title} </div>\n                <CanvasJSChart options = {options} onRef={ref => this.chart = ref}/>\n            </div>\n        );\n\n    }\n\n}"]},"metadata":{},"sourceType":"module"}