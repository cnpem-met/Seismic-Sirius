{"ast":null,"code":"var _jsxFileName = \"/home/reftek/seismic-sirius/src/modules/seismicpreview/seismicpreview.js\";\nimport React, { Component } from 'react';\nimport './seismicpreview.css';\nimport CanvasJSReact from './canvasjs/canvasjs.react';\nimport $ from 'jquery';\nimport { hideAxys } from './actions/actions';\nimport LoadGif from '../loadGif/loadgif';\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nexport default class SeismicPreview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      channel: [],\n      state: 0,\n      load: 0\n    };\n  }\n\n  componentDidMount() {\n    this.setPreview(this.props.type, this.props.channel);\n    if (this.props.type === \"preview\") setInterval(this.setPreview.bind(this), 10000);\n  }\n\n  setPreview() {\n    fetch(`http://10.0.38.242/api/seismic${this.props.type}.php?channel=${this.props.channel}`).then(response => response.json()).then(responseJson => {\n      this.setState({\n        channel: responseJson.channel\n      });\n    });\n  }\n\n  render() {\n    var data = [];\n    var dataPoints = [];\n    var dataSeries = {\n      type: \"line\",\n      lineColor: \"rgb(1, 176, 117)\"\n    };\n    var cont = 0;\n    this.state.channel.forEach(e => {\n      console.log(e);\n      dataPoints.push({\n        x: cont++,\n        y: parseInt(e[1])\n      });\n    });\n    dataSeries.dataPoints = dataPoints;\n    data.push(dataSeries);\n    const options = {\n      backgroundColor: \"transparent\",\n      height: $(window).height() * this.props.height,\n      zoomEnabled: true,\n      axisY: {\n        title: \"MAGNITUDE (10e+6)\",\n        titleFontSize: $(window).height() * 0.016,\n        titleFontColor: \"#FFFFFF\",\n        includeZero: true,\n        labelFontColor: \"white\",\n        labelFontSize: $(window).height() * 0.016,\n        labelFormatter: hideAxys(this.props.type)\n      },\n      axisX: {\n        titleFontSize: $(window).height() * 0.016,\n        titleFontColor: \"#FFFFFF\",\n        includeZero: false,\n        labelFontColor: \"white\",\n        labelFontSize: $(window).height() * 0.016\n      },\n      data: data\n    };\n    if (this.state.channel.length === 0) return /*#__PURE__*/React.createElement(LoadGif, {\n      title: this.props.title,\n      height: $(window).height() * this.props.height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 20\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, \" \", this.props.title, \" \"), /*#__PURE__*/React.createElement(CanvasJSChart, {\n      options: options,\n      onRef: ref => this.chart = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/reftek/seismic-sirius/src/modules/seismicpreview/seismicpreview.js"],"names":["React","Component","CanvasJSReact","$","hideAxys","LoadGif","CanvasJSChart","SeismicPreview","constructor","props","state","channel","load","componentDidMount","setPreview","type","setInterval","bind","fetch","then","response","json","responseJson","setState","render","data","dataPoints","dataSeries","lineColor","cont","forEach","e","console","log","push","x","y","parseInt","options","backgroundColor","height","window","zoomEnabled","axisY","title","titleFontSize","titleFontColor","includeZero","labelFontColor","labelFontSize","labelFormatter","axisX","length","ref","chart"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './seismicpreview.css';\nimport CanvasJSReact from './canvasjs/canvasjs.react';\nimport $ from 'jquery';\n\nimport {hideAxys} from './actions/actions';\nimport LoadGif from '../loadGif/loadgif';\n\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nexport default class SeismicPreview extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {channel: [], state: 0, load: 0};\n    }\n\n    componentDidMount(){\n        this.setPreview(this.props.type, this.props.channel);\n        if(this.props.type === \"preview\")\n            setInterval(this.setPreview.bind(this), 10000);\n    }\n\n    setPreview() {\n        fetch(`http://10.0.38.242/api/seismic${this.props.type}.php?channel=${this.props.channel}`)\n            .then((response) => response.json())\n            .then((responseJson) => {\n                 this.setState({\n                     channel: responseJson.channel\n                 });\n            })\n    }\n\n    render(){\n\n        var data = [];\n        var dataPoints = [];\n        var dataSeries = {type: \"line\", lineColor: \"rgb(1, 176, 117)\"};\n        var cont=0;\n        \n        this.state.channel.forEach(e => {\n            console.log(e);\n\t    dataPoints.push({x: cont++, y: parseInt(e[1])})\n        });\n\n        dataSeries.dataPoints = dataPoints;\n        data.push(dataSeries);\n\n        const options = {\n            backgroundColor: \"transparent\",\n            height: $(window).height() * this.props.height,\n            zoomEnabled: true,\n            axisY: {\n                title: \"MAGNITUDE (10e+6)\",\n                titleFontSize: $(window).height() * 0.016,\n                titleFontColor: \"#FFFFFF\",\n                includeZero: true, \n                labelFontColor: \"white\", \n                labelFontSize:  $(window).height() * 0.016, \n                labelFormatter: hideAxys(this.props.type)\n            },\n\t\t\taxisX: {\n                titleFontSize: $(window).height() * 0.016,\n                titleFontColor: \"#FFFFFF\",\n                includeZero: false, \n                labelFontColor: \"white\", \n                labelFontSize:  $(window).height() * 0.016,\n            },\n            data: data\n        }\n\n        if(this.state.channel.length === 0)\n            return(<LoadGif title={this.props.title} height={$(window).height() * this.props.height}/>);\n        \n        return(\n            <div>\n                <div className=\"spacing\"> {this.props.title} </div>\n                <CanvasJSChart options = {options} onRef={ref => this.chart = ref}/>\n            </div>\n        );\n\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}