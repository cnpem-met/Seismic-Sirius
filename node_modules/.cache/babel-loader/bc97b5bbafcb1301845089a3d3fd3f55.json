{"ast":null,"code":"var _jsxFileName = \"/home/reftek/seismic-sirius/src/modules/seismicpreview/fourierpreview.js\";\nimport React, { Component } from 'react';\nimport './seismicpreview.css';\nimport CanvasJSReact from './canvasjs/canvasjs.react';\nimport $ from 'jquery';\nimport LoadGif from '../loadGif/loadgif';\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nexport default class FouerierPreview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      channel: [],\n      lastRequisition: \"first\"\n    };\n    this.setPreview();\n  }\n\n  setPreview() {\n    fetch(`http://10.0.38.242/api/fourierpreview.php?channel=${this.props.channel}&requisition=${this.props.requisition}`).then(response => response.json()).then(responseJson => {\n      this.setState({\n        channel: responseJson.fourier,\n        lastRequisition: this.props.requisition\n      });\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.state.lastRequisition !== this.props.requisition) this.setPreview();\n  }\n\n  render() {\n    var data = [];\n    var dataPoints = [];\n    var dataSeries = {\n      type: \"line\",\n      lineColor: \"rgb(1, 176, 117)\"\n    };\n    var type = this.props.type;\n    var frequencyUp = 50 / this.state.channel.length;\n    var frequency = 0;\n    this.state.channel.forEach(e => {\n      dataPoints.push({\n        x: frequency,\n        y: parseFloat(e)\n      });\n      frequency = frequency + frequencyUp;\n    });\n    dataSeries.dataPoints = dataPoints;\n    data.push(dataSeries);\n    const options = {\n      backgroundColor: \"transparent\",\n      height: $(window).height() * this.props.height,\n      zoomEnabled: true,\n      axisY: {\n        title: \"MAGNITUDE (10e+6)\",\n        titleFontSize: $(window).height() * 0.016,\n        titleFontColor: \"#FFFFFF\",\n        includeZero: true,\n        labelFontColor: \"white\",\n        labelFontSize: $(window).height() * 0.016,\n        labelFormatter: function (e) {\n          if (type === \"preview\") return \"\";\n          return e.value / 10 ** 6;\n        }\n      },\n      axisX: {\n        title: \"FREQUENCY (Hz)\",\n        titleFontSize: $(window).height() * 0.016,\n        titleFontColor: \"#FFFFFF\",\n        includeZero: false,\n        labelFontColor: \"white\",\n        labelFontSize: $(window).height() * 0.016\n      },\n      data: data\n    };\n    if (this.state.channel.length === 0) return /*#__PURE__*/React.createElement(LoadGif, {\n      title: this.props.title,\n      height: $(window).height() * this.props.height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 20\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, \" \", this.props.title, \" \"), /*#__PURE__*/React.createElement(CanvasJSChart, {\n      options: options,\n      onRef: ref => this.chart = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/reftek/seismic-sirius/src/modules/seismicpreview/fourierpreview.js"],"names":["React","Component","CanvasJSReact","$","LoadGif","CanvasJSChart","FouerierPreview","constructor","props","state","channel","lastRequisition","setPreview","fetch","requisition","then","response","json","responseJson","setState","fourier","componentDidUpdate","render","data","dataPoints","dataSeries","type","lineColor","frequencyUp","length","frequency","forEach","e","push","x","y","parseFloat","options","backgroundColor","height","window","zoomEnabled","axisY","title","titleFontSize","titleFontColor","includeZero","labelFontColor","labelFontSize","labelFormatter","value","axisX","ref","chart"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './seismicpreview.css';\nimport CanvasJSReact from './canvasjs/canvasjs.react';\nimport $ from 'jquery';\nimport LoadGif from '../loadGif/loadgif';\n\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nexport default class FouerierPreview extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {channel: [], lastRequisition: \"first\"};\n        this.setPreview();\n    }\n\n    setPreview(){\n        fetch(`http://10.0.38.242/api/fourierpreview.php?channel=${this.props.channel}&requisition=${this.props.requisition}`)\n            .then((response) => response.json())\n            .then((responseJson) => {\n                this.setState({\n                    channel: responseJson.fourier,\n                    lastRequisition: this.props.requisition\n                });\n            });\n    }\n\n    componentDidUpdate(){\n        if(this.state.lastRequisition !== this.props.requisition)\n            this.setPreview()\n    }\n\n    render(){\n\n        var data = [];\n        var dataPoints = [];\n        var dataSeries = {type: \"line\", lineColor: \"rgb(1, 176, 117)\"};\n        var type = this.props.type;\n\n        var frequencyUp = 50/this.state.channel.length;\n        var frequency = 0\n\n        this.state.channel.forEach(e => {\n            dataPoints.push({x: frequency, y: parseFloat(e)});\n            frequency = frequency + frequencyUp;\n        })\n        \n        dataSeries.dataPoints = dataPoints;\n        data.push(dataSeries);\n\n        const options = {\n            backgroundColor: \"transparent\",\n            height: $(window).height() * this.props.height,\n            zoomEnabled: true,\n            axisY: {\n                title: \"MAGNITUDE (10e+6)\",\n                titleFontSize: $(window).height() * 0.016,\n                titleFontColor: \"#FFFFFF\",\n                includeZero: true, \n                labelFontColor: \"white\", \n                labelFontSize:  $(window).height() * 0.016, \n                labelFormatter: function(e){\n                    if(type === \"preview\")\n                        return \"\";\n                    return e.value / 10**6;\n                },\n            },\n\t\t\taxisX: {\n                title: \"FREQUENCY (Hz)\",\n                titleFontSize: $(window).height() * 0.016,\n                titleFontColor: \"#FFFFFF\",\n                includeZero: false, \n                labelFontColor: \"white\", \n                labelFontSize:  $(window).height() * 0.016,\n            },\n            data: data\n        }\n        \n        if(this.state.channel.length === 0)\n            return(<LoadGif title={this.props.title} height={$(window).height() * this.props.height}/>);\n        \n        return(\n            <div>\n                <div className=\"spacing\"> {this.props.title} </div>\n                <CanvasJSChart options = {options} onRef={ref => this.chart = ref}/>\n            </div>\n        );\n\n    }\n\n}"]},"metadata":{},"sourceType":"module"}